
https://codeshare.io/G78001



#string[start:stop:step]   
name = "python programming"
print(name[0])
print(name[1])
print(name[0:4])
print(name[8:13])
print(name[0:18])  #python programming
print(name[0:18:1]) #python programming
print(name[0:18:2])
print(name[1:18:2])
print(name[7:18:4])
print(name[::])  #python programming
print(name[:])   #python programming
print(name[::2])
print(name[0::3])
print(name[0:6:3])
print(name[-1])
print(name[-3])
print(name[-5:-2])
print(name[::1])   ##python programming
print(name[::-1])  #gnimmargorp nohtyp

print(name[17])
print(name[-1])
#p   y    t    h    o    n          p    r   o    g    r   a    m     m    i    n   g
#0   1    2    3    4    5    6    7     8   9   10   11   12   13    14   15  16  17
#                                                          -6   -5    -4  -3   -2   -1


name = "python programming"
output = list(name)
name = "    ".join(output)
print(name)






name = "python programming"

print(name.capitalize())
print(name.title())
print(name.replace("python","ruby"))
print(name.center(40))
print(name.center(40,"*"))
print(name.endswith("g"))
print(name.endswith("q"))
print(name.startswith("p"))
print(name.startswith("w"))
print(name.find("gra"))  # if substring found.. returns the starting index
print(name.find("qer"))  # if substring is not round.. retuns -1
print(name.isalpha())
print(name.isalnum())
print(name.isupper())
print(name.isdigit())
print(name.islower())

aname = " python  "
print(len(aname))
print(aname.strip())  # will remove whitespaces at both ends
print(len(aname.strip())) # remove whitespaces first and then get the string length
print(len(aname.rstrip()))
print(len(aname.lstrip()))

print(name.split(" "))  # converting string to the list



aname = " python  "
print(len(aname))
print(aname.strip())  # will remove whitespaces at both ends
print(len(aname.strip())) # remove whitespaces first and then get the string length
print(len(aname.rstrip()))
print(len(aname.lstrip()))

print(name.split(" "))  # converting string to the list

# string formatting
string = "I love {} and {}" # template
print(string.format("python","ML"))
print(string.format("c","C++"))
print(string.format("Hyderabad","Bangalore"))

# fstring 
name = "Rita"
age = 30
print(f"My name is {name} and my age is {age} years")

lang1 = "python"
lang2 = "ML"
print(f"I love {lang1} and {lang2}")




print(name.isalpha())
print(name.isalnum())
print(name.isupper())
print(name.isdigit())
print(name.islower())

# simple if
name = "python"
if name.islower():
    print("String is lower")

# if-else
if name.islower():
    print("String is lower")
    print("inside if")
    print("Still inside if")
else:
    print("String is upper")

# if-elif-eif-elif-elif-else
lang = input("Enter any language :")
if lang == "python":
    print("you entered python")
elif lang == "unix":
    print("you entered unix")
elif lang == "java":
    print("you entered java")
elif lang == "genai":
    print("you entered genai")
else:
    print("you entered someother language")






##################################################################
write a program to reverse a string without using [::-1]

Enter any string:  python
nohtyp



rev_text = ""

for char in text:
    rev_text = char + rev_text
print("String reverse:", rev_text)


# method2
data = list(text)  # ["p","y","t","h","o","n"]
data.reverse()       #['n', 'o', 'h', 't', 'y', 'p']
string = "".join(data)
print("String reverse :",string)


##################################################################
    
write a program to convert the string to uppercase only if its length is more than 10 characters else display the same string.


sample output:
Enter a string: python programming
PYTHON PROGRAMMING


name = input("Enter any name :")

if len(name) > 10 :
    print("String:",name)
else:
    print(f"length of the {name} is less than 10 chars")

##################################################################

write a program to count no. of words in a sentence.

sample output:

Enter a sentence: I love python programming language
word count:  5




name = input("Enter any string :")
data = name.split(" ")
print("no. of words: ", len(data))
##################################################################

write a program to replace all the vowels in a string with *.

Enter a string: python
pyth*n


text = input("Enter a string :")  #python
vowels = "aeiouAEIOU"
result = ""
for char in text:
    if char in vowels:
        result = result + "*"
    else:
        result = result + char
print("Output:", result)



##################################################################

write a program to count how many uppercase , lowercase letters and digits are  in  a string


Enter a string: PyTHon108
Uppercase letters: 3
Lowercase letters: 3
Digits : 3


text = input("Enter a string :")
upper = 0
lower = 0
digits = 0
for char in text:
    if char.isupper() :
        upper+=1
    elif char.islower():
        lower+=1
    elif char.isdigit():
        digits+=1

print("Uppercase letters:", upper)
print("Lowercase letters:", lower)
print("Digits:",digits)

##################################################################

write a progarm to count character frequencies:


Enter a string :  hello

h : 1 time
e : 1 time
l : 2 times
o : 1 time


text = input("Enter a string :")

list_text = list(text)
data= set(text)

for char in data:
    print(char.ljust(5), ":",list_text.count(char),"times")



#################################list methods ####################

alist = [56,34,62,61,39,9,2,4,6,72]

# add single object
alist.append(39)
print("After appending :",alist)
alist.append(41)
print("After appending :", alist)
# adding multiple values to the end of list
alist.extend([81,29,43])
print("After extending :",alist)
#list.insert(index,value)
alist.insert(0,100)
print("After indexing :",alist )
alist.pop(0)  #0 is the index  # list.pop(index) # will remove value at that index
print("After pop opertaion :",alist)
alist.pop(3)
print("After pop opertaion :",alist)
alist.remove(72)  # 72 is the value
print("After removing: :",alist)
alist.reverse()
print("Reversing :",alist)
alist.sort()  # ascending order
print("After sorting :",alist)
alist.sort(reverse=True) # descending order
print("After sorting:",alist)



alist = [56,34,62,61,39,9,2,4,6,72]
for val in alist:
    print(val)

for i in alist:
    print(i)


#################################################################
############################ list assignments #################
##################################################################

wrrite a program to reverse a list without list.reverse() and [::-1]


alist = [45,67,21,65,32,96,10]
print("Initial list:", alist)
rev_list= []

for num in alist:
    rev_list = [num] + rev_list

print("After reversing :", rev_list)
#################################################################

write a program to square each number in a list

nums = [1,2,3,4]

output:
[1,2,9,16]



nums = [1,2,3,4]
output = []
for val in nums:
    output.append(val ** 2)
print(output)


#################################################################

write a program to join a list of words into a single string

words = ["I","love","python","programming"]

output:
I love python programming



words = ["I","love","python","programming"]

string = " ".join(words)
print(string)
#################################################################

write a program to filter words longer than 4 letters

words = ["python","unix","java","oracle"]

output:
["python","oracle"]

#################################################################

Write a program to join corresponding strings from two lists.

first = ["Good", "Data", "Machine"]
second = ["Morning", "Science", "Learning"]

Output:
Good Morning
Data Science
Machine Learning





first = ["Good", "Data", "Machine"]
second = ["Morning", "Science", "Learning"]

count = 0

for item in first:
    finalstring = first[count] + " " + second[count]
    count = count + 1
    print(finalstring)



#zip(list1,list2)

for a,b in zip(first,second):
    finalstring = a + " " + b
    print(finalstring)

#################################################################

Write a program to get all unique words from a list of sentences.

sentences = ["hello world", "hello python", "data world"]

output:
["hello","world","python","data","world"]



#################################################################


Write a program to capitalize only the first letter of each word in a list 
    
#################################################################

data = ["Alice", "", None, "Bob", "Carol", "", None]

Write a program to replace all None or empty strings in a list with 'NA'.

output:
["Alice", 'NA', 'NA', "Bob", "Carol", 'NA', 'NA']
#################################################################





##### dictionary
book = {"chap1":10 , "chap2":20 ,"chap3":30}

print(book)

# add new keyvalue pairs
book["chap4"] = 40    #"chap4":40 will be added to dictionary
book["chap5"] = 50
print(book)

# display individual values
print(book["chap1"]) # 10
print(book["chap2"]) # 20


# display only keys
print(book.keys())

# only values
print(book.values())

# pairs
print(book.items())




################################# dictionary tasks #######################



colors = [
{
"colors": "red",
"values": "#f00"
},
{
"colors": "green",
"values": "#0f0"
},
{
"colors": "blue",
"values": "#00f"
},
{
"colors": "cyan",
"values": "#0ff"
},
{
"colors": "magenta",
"values": "#f0f"
},
{
"colors": "yellow",
"values": "#ff0"
},
{
"colors": "black",
"values": "#000"
}
]

write a program to display all the colors and its values.

sample output :

red #f00
green #0f0
yellow  #ff0
magenta #f0f
..
..
..


for item in colors:
    print(item['colors'].ljust(10) , item["values"])
################################################################

Write a program to display all employee names and their departments.

employees = {
    "E001": {"name": "Alice", "department": "Finance"},
    "E002": {"name": "Bob", "department": "IT"},
    "E003": {"name": "Charlie", "department": "HR"}
}


sample output:

Alice  Finance
Bob    IT


for key,value in employees.items():
    print(value['name'], value['department'])




for i in products:
    print(i['name'], i['price'])
    
    
    
################################################################

Write a program to print all product names and prices.

products = [
    {"id": 101, "name": "Laptop", "price": 75000},
    {"id": 102, "name": "Mobile", "price": 25000},
    {"id": 103, "name": "Tablet", "price": 15000}
]



for i in products:
    print(i['name'], i['price'])

################################################################

Write a program to show student names with grades.

students = [
    {"id": 1, "name": "John", "marks": {"math": 80, "science": 75}},
    {"id": 2, "name": "Jane", "marks": {"math": 90, "science": 85}}
]


for student in students:
    print(student["name"])
    print("--------------------")
    for subjct,marks in student['marks'].items():
        print(subjct,marks)

################################################################

Write a program to print team names and player names.

teams = {
    "TeamA": [
        {"name": "Alice", "role": "Batsman"},
        {"name": "Bob", "role": "Bowler"}
    ],
    "TeamB": [
        {"name": "Charlie", "role": "Allrounder"},
        {"name": "Dave", "role": "Wicketkeeper"}
    ]
}


sample output:

TeamA
-----
Alice
Bob

TeamB
-----
Charlie
Dave



for team,values in teams.items():
    print(team)
    print("--------")
    for i in values:
        print(i['name'])
    print()



################################################################
Write a program to tag each VM as 'Running' or 'Stopped' based on status.

output:
vm1 - Running
vm2 - Stopped



for key,value in infra.items():
    print(key , value['status'])
    
    
    
################################################################

Write a program to deposit 1000 into all customer accounts and display the dictionary


customers = {
    "C001": {"name": "Alice", "balance": 5000},
    "C002": {"name": "Bob", "balance": 12000},
    "C003": {"name": "Charlie", "balance": 3000}
}


output:
{
    "C001": {"name": "Alice", "balance": 6000},
    "C002": {"name": "Bob", "balance": 13000},
    "C003": {"name": "Charlie", "balance": 4000}
}


################################################################

Write a program to list customers with balance over 10000.


customers = {
    "C001": {"name": "Alice", "balance": 5000},
    "C002": {"name": "Bob", "balance": 12000},
    "C003": {"name": "Charlie", "balance": 3000}
}


for key,value in customers.items():
    customers[key]['balance']+=1000
print(customers)

################################################################

write a program to read the below dictionary and display the expected output

info = {
"id": "0001",
"type": "donut",
"name": "Cake",
"image":
{
"url": "images/0001.jpg",
"width": 200,
"height": 200
},
"thumbnail":
{
"url": "images/thumbnails/0001.jpg",
"width": 32,
"height": 32
}
}


sample output:

ID              : 0001
TYPE            : donut
NAME            : Cake
IMAGE URL       :"images/0001.jpg
IMAGE WIDTH     : 200
IMAGE HEIGHT    : 200
THUMBNAIL URL   : "images/thumbnails/0001.jpg"
THUMBNAIL WIDTH : 32
THUMBNAIL HEIGHT:  32



for key,value in info.items():
    if type(value) is str:
        print(key.ljust(20),":", value)
        print("--------")
    if type(value) is dict:
        for skey,svalue in value.items():
            finalkey = key + " " + skey
            print(finalkey,":",svalue)
            


################################################################

data = {
    'Sales': {
        'North': {
            'Alice': 'Manager',
            'Bob': 'Sales Executive',
            'Eve': 'Sales Coordinator',
            'John': 'Account Manager'
        },
        'South': {
            'Charlie': 'Sales Executive',
            'Grace': 'Regional Sales Manager',
            'Mallory': 'Business Development Associate'
        },
        'West': {
            'Oscar': 'Sales Executive',
            'Peggy': 'Account Executive',
            'Victor': 'Territory Sales Manager'
        }
    },
    'Marketing': {
        'Digital': {
            'David': 'SEO Specialist',
            'Hannah': 'Content Strategist',
            'Irene': 'Social Media Manager'
        },
        'Offline': {
            'Eve': 'Event Coordinator',
            'Jake': 'Brand Manager',
            'Liam': 'Public Relations Specialist'
        },
        'Research': {
            'Mia': 'Market Research Analyst',
            'Noah': 'Customer Insights Manager'
        }
    },
    'IT': {
        'Infrastructure': {
            'Quinn': 'Network Engineer',
            'Riley': 'System Administrator',
            'Sam': 'Cloud Architect'
        },
        'Development': {
            'Tina': 'Software Engineer',
            'Uma': 'Backend Developer',
            'Walter': 'Full Stack Developer'
        }
    },
    'HR': {
        'Recruitment': {
            'Yara': 'Recruitment Specialist',
            'Zane': 'Talent Acquisition Manager',
            'Nina': 'HR Coordinator'
        },
        'Employee Relations': {
            'Oliver': 'Employee Relations Specialist',
            'Sophia': 'HR Business Partner'
        }
    },
    'Finance': {
        'Accounting': {
            'Xander': 'Accountant',
            'Yvette': 'Accounts Payable Specialist',
            'Zara': 'Financial Analyst'
        },
        'Audit': {
            'Luna': 'Internal Auditor',
            'Mason': 'Compliance Officer'
        }
    }
}


write a program to display the below output:


Sales
-----
North
South
West


Marketing
--------
Digital
Offline
Research


IT
---
Infrasturcture
Development

HR
---
Recruitment
Employee Relations


################################################################



################################################################



################################################################

